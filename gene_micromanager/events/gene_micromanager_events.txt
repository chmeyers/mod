namespace = gene_micromanager_mod

# Edict Enabled
country_event = {
	id = gene_micromanager_mod.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# Called by the monthly pulse, but have to make sure the edict is active.
		has_edict = gene_micromanager
	}

	immediate = {
		while = {
			count = value:micromanager_pops_per_month
			random_owned_pop = {
				limit = {
					NOT = { has_pop_flag = gene_micromanaged }
					species = { is_robotic = no }
				}
				gene_micromanage_pop = yes
				set_pop_flag = gene_micromanaged
			}
		}
		if = {
			limit = {
				NOT = { any_owned_pop = {
						NOT = { has_pop_flag = gene_micromanaged }
						species = { is_robotic = no }
				} }
			}
			# No pops haven't been micromanaged yet. Clear all the flags and start a new pass.
			every_owned_pop = {
				remove_pop_flag = gene_micromanaged
			}
		}
	}
}

# Leader Policy First Enabled or Leader Assigned.
country_event = {
	id = gene_micromanager_mod.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_policy_flag = leader_enhancement_custom_genesculpting
	}

	immediate = {
		every_owned_leader = {
			limit = {
				NOT = { has_leader_flag = genemod_sculpted }
				species = {
					is_robotic = no
					NOT = { has_trait = trait_mechanical }
				}
			}
			set_leader_flag = genemod_sculpted
			if = {
				limit = { species = { NOT = { has_trait = trait_erudite } } }
				modify_species = {
					add_trait = trait_erudite # Cost 4
				}
			}
			if = {
				limit = { species = { NOT = { has_trait = trait_robust } } }
				modify_species = {
					add_trait = trait_robust # Cost 4
				}
			}
			if = {
				limit = { species = { NOT = { has_trait = trait_venerable } } }
				modify_species = {
					add_trait = trait_venerable # Cost 4
					remove_trait = trait_enduring
					remove_trait = trait_fleeting
				}
			}
			if = {
				limit = { species = { NOT = { has_trait = trait_quick_learners } } }
				modify_species = {
					add_trait = trait_quick_learners # Cost 1
					remove_trait = trait_slow_learners
				}
			}
			if = {
				limit = { species = { NOT = { has_trait = trait_talented } } }
				modify_species = {
					add_trait = trait_talented # Cost 1
				}
			}
			if = {
				limit = {
					owner = { has_origin = origin_overtuned }
				}
				modify_species = {
					remove_trait = trait_spliced_adaptability
					remove_trait = trait_juiced_power
					remove_trait = trait_farm_hands
					remove_trait = trait_crack_miner
					remove_trait = trait_technical_skill
					remove_trait = trait_crafted_smiles
					remove_trait = trait_low_maintenance
					remove_trait = trait_artificial_intelligence
					remove_trait = trait_expressed_tradition
					remove_trait = trait_preplanned_growth
					remove_trait = trait_excessive_endurance
				}
			}
			if = {
				limit = {
					host_has_dlc = "Toxoids Species Pack"
				}
				modify_species = {
					add_trait = trait_exotic_metabolism
				}
			}
		}
		# Same thing for pool leaders
		every_pool_leader = {
			limit = {
				NOT = { has_leader_flag = genemod_sculpted }
				species = {
					is_robotic = no
					NOT = { has_trait = trait_mechanical }
				}
			}
			set_leader_flag = genemod_sculpted
			if = {
				limit = { species = { NOT = { has_trait = trait_erudite } } }
				modify_species = {
					add_trait = trait_erudite # Cost 4
				}
			}
			if = {
				limit = { species = { NOT = { has_trait = trait_robust } } }
				modify_species = {
					add_trait = trait_robust # Cost 4
				}
			}
			if = {
				limit = { species = { NOT = { has_trait = trait_venerable } } }
				modify_species = {
					add_trait = trait_venerable # Cost 4
					remove_trait = trait_enduring
					remove_trait = trait_fleeting
				}
			}
			if = {
				limit = { species = { NOT = { has_trait = trait_quick_learners } } }
				modify_species = {
					add_trait = trait_quick_learners # Cost 1
					remove_trait = trait_slow_learners
				}
			}
			if = {
				limit = { species = { NOT = { has_trait = trait_talented } } }
				modify_species = {
					add_trait = trait_talented # Cost 1
				}
			}
			if = {
				limit = {
					owner = { has_origin = origin_overtuned }
				}
				modify_species = {
					remove_trait = trait_spliced_adaptability
					remove_trait = trait_juiced_power
					remove_trait = trait_farm_hands
					remove_trait = trait_crack_miner
					remove_trait = trait_technical_skill
					remove_trait = trait_crafted_smiles
					remove_trait = trait_low_maintenance
					remove_trait = trait_artificial_intelligence
					remove_trait = trait_expressed_tradition
					remove_trait = trait_preplanned_growth
					remove_trait = trait_excessive_endurance
				}
			}
			if = {
				limit = {
					host_has_dlc = "Toxoids Species Pack"
				}
				modify_species = {
					add_trait = trait_exotic_metabolism
				}
			}
		}
		# Set the leader erudite traits
		country_event = { id = utopia.2508 }
	}
}

# Leader Policy Disabled
country_event = {
	id = gene_micromanager_mod.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_policy_flag = leader_enhancement_custom_genesculpting }
	}

	immediate = {
		every_owned_leader = {
			limit = { has_leader_flag = genemod_sculpted }
			save_event_target_as = genmod_sculpt_undo
			owner = {
				if = {
					limit = {
						any_owned_species = {
							is_same_species = event_target:genmod_sculpt_undo.species
							has_trait = trait_erudite
						}
					}
					# They own a matching species with erudite, use that one.
					random_owned_species = {
						limit = {
							is_same_species = event_target:genmod_sculpt_undo.species
							has_trait = trait_erudite
						}
						event_target:genmod_sculpt_undo = {
							change_species = prev
							remove_leader_flag = genemod_sculpted
						}
					}
				}
				else_if = {
					limit = {
						any_owned_species = {
							is_same_species = prevprev.species
						}
					}
					# Take whatever.
					event_target:genmod_sculpt_undo = {
						change_species = prev
						remove_leader_flag = genemod_sculpted
					}
				}
				# Else: They don't own any pops of the leader's species.
				# What luck. They will stay as they are.
			}
			
		}
		# Same thing with the pool leaders
		every_pool_leader = {
			limit = { has_leader_flag = genemod_sculpted }
			save_event_target_as = genmod_sculpt_undo
			owner = {
				if = {
					limit = {
						any_owned_species = {
							is_same_species = event_target:genmod_sculpt_undo.species
							has_trait = trait_erudite
						}
					}
					# They own a matching species with erudite, use that one.
					random_owned_species = {
						limit = {
							is_same_species = event_target:genmod_sculpt_undo.species
							has_trait = trait_erudite
						}
						event_target:genmod_sculpt_undo = {
							change_species = prev
							remove_leader_flag = genemod_sculpted
						}
					}
				}
				else_if = {
					limit = {
						any_owned_species = {
							is_same_species = prevprev.species
						}
					}
					# Take whatever.
					event_target:genmod_sculpt_undo = {
						change_species = prev
						remove_leader_flag = genemod_sculpted
					}
				}
				# Else: They don't own any pops of the leader's species.
				# What luck. They will stay as they are.
			}
			
		}
		# Set the leader erudite traits
		country_event = { id = utopia.2508 }
	}
	
}

# Events to trigger from console for debugging purposes
# Micromanage everybody
country_event = {
	id = gene_micromanager_mod.4
	hide_window = yes
	is_triggered_only = yes


	immediate = {
		every_owned_pop = {
			limit = {
				species = { is_robotic = no }
			}
			gene_micromanage_pop = yes
		}
	}
}

# Micromanage a planet
planet_event = {
	id = gene_micromanager_mod.5
	hide_window = yes
	is_triggered_only = yes


	immediate = {
		every_owned_pop = {
			limit = {
				species = { is_robotic = no }
			}
			gene_micromanage_pop = yes
		}
	}
}